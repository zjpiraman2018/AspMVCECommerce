@model AspMVCECommerce.ViewModel.ProductViewModel
@using Microsoft.Web.Helpers;
@{
    Layout = "~/Views/Shared/_SellerLayout.cshtml";
    ViewBag.Title = "Create";
}

<!-- BREADCRUMB -->
<div id="breadcrumb" class="section" style="display: flex;">
    <div class="container">

        <div class="row pull-left" style="width: 230px;">
            <div class="col-md-12">
                <ul class="breadcrumb-tree">
                    <li> <a href="#" style="font-size: 16px; font-weight: bold">Manage Product</a></li>

                </ul>

            </div>
        </div>

    </div>
    <!-- container -->
    <div class="container" style="margin-left:200px;">
        <!-- row -->
        <div class="row">
            <div class="col-md-12">
                <ul class="breadcrumb-tree">
                    <li><a href="~/Home/Index">Home</a></li>
                    <li><a href="~/Products/Index">Products</a></li>
                    <li class="active">Create New</li>

                </ul>


                <ul class="breadcrumb-tree pull-right">
                    <li>  @Html.ActionLink("Back to List", "Index")</li>



                </ul>
            </div>
        </div>
        <!-- /row -->
    </div>
    <!-- /container -->
</div>
<!-- /BREADCRUMB -->

<div class="section">
    <!-- container -->
    <div class="container">




        @using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()

            <div class="form-horizontal">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-controlx" } })
                        @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })*@

                   
                        @Html.TextAreaFor(model => model.Description, new { @class = "form-control", @rows = 4 })

           

                        @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Details, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @*@Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control" } })*@

                        @Html.TextAreaFor(model => model.Details, new { @class = "form-control", @rows = 4 })

                        @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.OriginalPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.OriginalPrice, new { htmlAttributes = new { @class = "form-controlx" } })
                        @Html.ValidationMessageFor(model => model.OriginalPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DiscountedPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.DiscountedPrice, new { htmlAttributes = new { @class = "form-controlx" } })
                        @Html.ValidationMessageFor(model => model.DiscountedPrice, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Stock, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-controlx" } })
                        @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PromoSaleOFF, htmlAttributes: new { @class = "control-label col-md-2 " })
                    <div class="col-md-10">


                        <div class="row" style="display: flex; margin-right:0px; margin-left: 0px; ">
                            @Html.EditorFor(model => model.PromoSaleOFF, new { htmlAttributes = new { @class = "form-controlx promosale" } })
                            <label id="PromoSaleOFFPercent" for="PromoSaleOFF" style="padding-left: 6px; padding-top: 7px;"></label>
                        </div>



                        @Html.ValidationMessageFor(model => model.PromoSaleOFF, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group" id="PromoDurationDiv" hidden>
                    <label class="control-label col-md-2" for="PromoSaleStartDateTime">Promo Sale Duration</label>
                    <div class="col-md-10">


                        <div class="container" style="padding-left:0px">
                            <div class='col-md-4' style="padding-left:0px">
                                <div class="form-group">
                                    <label class="control-label col-md-3" for="PromoSaleStartDateTime" style="text-align: left; width: auto;">Start Date:</label>
                                    <div class='input-group date' id='datetimepicker6'>


                                        <input type='text' class="form-control" id='PromoSaleStartDateTime' name="PromoSaleStartDateTime" />
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                            <div class='col-md-4' style="padding-left:0px">
                                <div class="form-group">
                                    <label class="control-label col-md-3" for="PromoSaleEndDateTime" style="text-align: left; width: auto;">End Date:</label>
                                    <div class='input-group date' id='datetimepicker7'>

                                        <input type='text' class="form-control" id='PromoSaleEndDateTime' name="PromoSaleEndDateTime" />
                                        <span class="input-group-addon">
                                            <span class="glyphicon glyphicon-calendar"></span>
                                        </span>
                                    </div>
                                </div>
                            </div>
                        </div>



                    </div>
                </div>




                <div class="form-group">
                    @*@Html.LabelFor(model => model.CategoryId, "CategoryId", htmlAttributes: new { @class = "control-label col-md-2" })*@
                    <label class="control-label col-md-2" for="CategoryId">Category</label>
                    <div class="col-md-10">
                        @Html.DropDownList("CategoryId", null, htmlAttributes: new { @class = "form-controlx" })
                        @Html.ValidationMessageFor(model => model.CategoryId, "", new { @class = "text-danger" })
                    </div>
                </div>
                @*<div class="form-group">
                        @Html.LabelFor(model => model.ImageFile, "ImageFile", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            <input type="file" id="ImageFile" name="ImageFile" multiple required>

                        </div>
                    </div>*@
                <div class="form-group">
                    @*@Html.LabelFor(model => model.ImageFile, "ImageFile", htmlAttributes: new { @class = "control-label col-md-2" })*@

                    <label class="control-label col-md-2" for="ImageFile">Upload Images</label>
                    <div class="col-md-10">

                        @*<input type="file" class="custom-file-input" id="ImageFile" name="ImageFile" multiple>*@



                        <!--file input example -->
                        <label class="btn btn-primary" for="ImageFile">
                            <input id="ImageFile" type="file" style="display:none"
                                   name="ImageFile" multiple>
                            Choose files
                        </label>
                        <span class='label label-info' id="upload-file-info" style="font-size:medium"></span>
                        <!--./file input example -->





                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10">
                        <input type="submit" value="Create" class="btnx btn-defaultx" style="width: 150px; height: 40px;" />
                    </div>
                </div>




            </div>




        }


    </div>
    <!-- /container -->
</div>
<!-- /section -->
<!-- include summernote css/js -->
<link href="~/Content/summernote.min.css" rel="stylesheet">
<link href="~/Content/bootstrap-datetimepicker.min.css" rel="stylesheet" />
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")



    <script src="~/Scripts/summernote.min.js"></script>


    <script src="~/Scripts/moment.min.js"></script>

    <script src="~/Scripts/bootstrap-datetimepicker.min.js"></script>



    <script type="text/javascript">

        Date.prototype.addDays = function (days) {
            var date = new Date(this.valueOf());
            date.setDate(date.getDate() + days);
            return date;
        }

        //// This will set `ignore` for all validation calls
        //jQuery.validator.setDefaults({
        //    // This will ignore all hidden elements alongside `contenteditable` elements
        //    // that have no `name` attribute
        //    ignore: ":hidden, [contenteditable='true']:not([name])"
        //});

        $(document).ready(function () {
            // ------ Initialize summernote -----
            $('#Description').summernote({
                height: 150,   //set editable area's height
                });
            $('#Details').summernote({
                height: 150,   //set editable area's height
            });


            // ------ For Promo Duration DateTime Picker
            var currentDateTime = new Date().toLocaleString();
            var add30Days = new Date().addDays(30).toLocaleString();

            $('#PromoSaleStartDateTime').val(currentDateTime);
            $('#PromoSaleEndDateTime').val(add30Days);
            $('#datetimepicker6').datetimepicker();
            $('#datetimepicker6').data("DateTimePicker").minDate(currentDateTime);

            $('#datetimepicker7').datetimepicker({
                useCurrent: false //Important! See issue #1075
            });
            $('#datetimepicker7').data("DateTimePicker").minDate(currentDateTime);

            $("#datetimepicker6").on("dp.change", function (e) {
                $('#datetimepicker7').data("DateTimePicker").minDate(e.date);

                var add30DaysToEndDate = new Date(e.date).addDays(30).toLocaleString();

                $('#PromoSaleEndDateTime').val(add30DaysToEndDate);

            });
            $("#datetimepicker7").on("dp.change", function (e) {

                $('#datetimepicker6').data("DateTimePicker").maxDate(e.date);


            });
            // ------- End of Promo Duration DateTime Picker




            $("#ImageFile").change(function () {
                var filenames = this.files.length + " files selected";


                $('#upload-file-info').text(filenames);

            });


            $('#PromoSaleOFFPercent').text("0% OFF");
            if ($("#PromoSaleOFF").val() != '') {
                var percentText1 = parseInt(parseFloat($("#PromoSaleOFF").val()) * 100).toString() + "% OFF";
                $('#PromoSaleOFFPercent').text(percentText1);
            }

            $('#PromoSaleOFF').on('input', function (e) {
                if (this.value != '') {
                    var percentText = parseInt(parseFloat(this.value) * 100).toString() + "% OFF";
                    $('#PromoSaleOFFPercent').text(percentText);
                    if (parseFloat(this.value) > 0 && parseFloat(this.value) <= 1) {
                        $("#PromoDurationDiv").show();
                    }
                    else {
                        $("#PromoDurationDiv").hide();
                    }
                }
                else {
                    $("#PromoDurationDiv").hide();
                    $('#PromoSaleOFFPercent').text("0% OFF");
                }
            });

        });
    </script>
}
